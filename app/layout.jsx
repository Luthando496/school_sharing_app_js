"use client";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import { Book, Menu, X } from "lucide-react";
import { useUserStore } from "@/store/store";
import { Toaster } from "react-hot-toast";
import { useEffect, useState } from "react";
import { onAuthStateChanged, getAuth } from "firebase/auth";
import { app, db } from "@/firebase";
import { collection, query, where, onSnapshot } from "firebase/firestore";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});


const currentYear = new Date().getFullYear();

export default function RootLayout({ children }) {
  // --- SOLUTION ---
  // Select the entire state object. Zustand will memoize this and prevent re-renders.
  const { notificationCount, setNotificationCount } = useUserStore();
  // --- END SOLUTION ---

  const [isUser, setUserLog] = useState(null);
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  // useEffect for auth state remains the same
  useEffect(() => {
    const auth = getAuth(app);
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      setUserLog(user);
    });
    return () => unsubscribe();
  }, []);

  // useEffect for global notification listener remains the same
  useEffect(() => {
    if (!isUser) {
      setNotificationCount(0);
      return;
    }

    const conversationsRef = collection(db, "conversations");
    const q = query(conversationsRef, where("participants", "array-contains", isUser.uid));

    const unsubscribe = onSnapshot(q, (snapshot) => {
      let totalUnread = 0;
      snapshot.forEach(doc => {
        totalUnread += doc.data().unreadCounts?.[isUser.uid] || 0;
      });
      setNotificationCount(totalUnread);
    });

    return () => unsubscribe();
  }, [isUser, setNotificationCount]);

  return (
    <html lang="en">
      <head>
        <title>Resource Sharing Hub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased bg-primary`}>
        <Toaster position="top-center" reverseOrder={false} toastOptions={{
          className: '',
          duration: 3000,
          removeDelay: 1000,
        }} />
        <header className="py-6 bg-secondary relative z-50">
          <nav className="flex justify-between items-center px-4 mx-auto max-w-7xl">
            <Link href='/' className="font-bold text-2xl primary-text duration-300">
              Resource Hub
            </Link>

            <ul className="hidden md:flex gap-4 items-center">
                <li><Link href='/about' className="px-4 py-2 rounded-lg primary-text text-lg font-semibold cursor-pointer hover:bg-accent hover:text-white duration-300">About</Link></li>
                <li><Link href='/resources' className="px-4 py-2 rounded-lg primary-text text-lg font-semibold cursor-pointer hover:bg-accent hover:text-white duration-300">Resources</Link></li>
                <li><Link href='/blogs' className="px-4 py-2 rounded-lg primary-text text-lg font-semibold cursor-pointer hover:bg-accent hover:text-white duration-300">Blogs</Link></li>
                <li><Link href='/upload-resources' className="px-4 py-2 rounded-lg primary-text text-lg font-semibold cursor-pointer hover:bg-accent hover:text-white duration-300">Upload</Link></li>
                <li><Link href='/students' className="px-4 py-2 rounded-lg primary-text text-lg font-semibold cursor-pointer hover:bg-accent hover:text-white duration-300">Students</Link></li>
                <li>
                    <Link href='/chat' className="relative px-4 py-2 rounded-lg primary-text text-lg font-semibold cursor-pointer hover:bg-accent hover:text-white duration-300">
                    My Chats
                    {notificationCount > 0 && (
                        <span className="absolute top-0 right-0 flex h-5 w-5 items-center justify-center rounded-full bg-red-500 text-xs text-white">
                        {notificationCount}
                        </span>
                    )}
                    </Link>
                </li>
                <li>
                    {isUser ? (
                    <Link href='/profile' className="px-4 py-2 rounded-lg primary-text text-lg font-semibold cursor-pointer hover:bg-accent hover:text-white duration-300">Profile</Link>
                    ) : (
                    <Link href='/login' className="px-4 py-2 rounded-lg bg-btn text-white text-lg font-semibold cursor-pointer hover:bg-opacity-90 duration-300">Login</Link>
                    )}
                </li>
            </ul>

            <div className="md:hidden">
              <button onClick={() => setIsMenuOpen(!isMenuOpen)} className="primary-text focus:outline-none"><Menu size={28} /></button>
            </div>
          </nav>
        </header>

        <div className={`fixed top-0 right-0 h-full w-64 bg-secondary shadow-lg z-50 transform ${isMenuOpen ? "translate-x-0" : "translate-x-full"} transition-transform duration-300 ease-in-out md:hidden`}>
          <div className="flex justify-end p-4"><button onClick={() => setIsMenuOpen(false)} className="primary-text focus:outline-none"><X size={28} /></button></div>
          <ul className="flex flex-col items-center gap-4 p-4">
            <li><Link href='/about' onClick={() => setIsMenuOpen(false)} className="block px-4 py-2 rounded-lg primary-text text-lg font-semibold w-full text-center hover:bg-accent hover:text-white duration-300">About</Link></li>
            <li><Link href='/resources' onClick={() => setIsMenuOpen(false)} className="block px-4 py-2 rounded-lg primary-text text-lg font-semibold w-full text-center hover:bg-accent hover:text-white duration-300">Resources</Link></li>
            <li><Link href='/blogs' onClick={() => setIsMenuOpen(false)} className="block px-4 py-2 rounded-lg primary-text text-lg font-semibold w-full text-center hover:bg-accent hover:text-white duration-300">Blogs</Link></li>
            <li><Link href='/upload-resources' onClick={() => setIsMenuOpen(false)} className="block px-4 py-2 rounded-lg primary-text text-lg font-semibold w-full text-center hover:bg-accent hover:text-white duration-300">Upload</Link></li>
            <li><Link href='/students' onClick={() => setIsMenuOpen(false)} className="block px-4 py-2 rounded-lg primary-text text-lg font-semibold w-full text-center hover:bg-accent hover:text-white duration-300">Students</Link></li>
            <li>
                <Link href='/chat' onClick={() => setIsMenuOpen(false)} className="relative block px-4 py-2 rounded-lg primary-text text-lg font-semibold w-full text-center hover:bg-accent hover:text-white duration-300">
                My Chats
                {notificationCount > 0 && (
                  <span className="absolute top-1 right-8 flex h-5 w-5 items-center justify-center rounded-full bg-red-500 text-xs text-white">{notificationCount}</span>
                )}
              </Link>
            </li>
            <li className="w-full">
              {isUser ? (
                <Link href='/profile' onClick={() => setIsMenuOpen(false)} className="block px-4 py-2 rounded-lg primary-text text-lg font-semibold w-full text-center hover:bg-accent hover:text-white duration-300">Profile</Link>
              ) : (
                <Link href='/login' onClick={() => setIsMenuOpen(false)} className="block px-4 py-2 rounded-lg bg-btn text-white text-lg font-semibold w-full text-center hover:bg-opacity-90 duration-300">Login</Link>
              )}
            </li>
          </ul>
        </div>
        
        {children}

        <footer className="bg-primary primary-text py-10 px-4 shadow-xl shadow-black">
          <div className="container mx-auto flex flex-col items-center text-center space-y-8">
            <div className="flex flex-col items-center space-y-2">
              <a href="/" className="flex items-center space-x-2">
                <Book className="text-accent" size={28} />
                <span className="text-2xl font-bold tracking-tight primary-text">StudyHub</span>
              </a>
              <p className="text-sm max-w-md secondary-text">Connecting students with shared knowledge to help you succeed.</p>
            </div>
            <div className="flex flex-wrap justify-center gap-x-6 gap-y-2 text-sm font-medium">
              {["Browse Resources", "Upload Work", "About Us", "Contact", "Privacy Policy", "Terms of Service"].map((item, index) => (
                <a key={index} href={`/${item.toLowerCase().replace(/\s+/g, '-')}`} className="primary-text transition-colors duration-200">{item}</a>
              ))}
            </div>
            <div className="pt-6 border-t border-primary w-full max-w-xl">
              <p className="text-xs secondary-text">&copy; {currentYear} StudyHub. All rights reserved.</p>
            </div>
          </div>
        </footer>
      </body>
    </html>
  );
}

